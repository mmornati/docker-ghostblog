name: Docker Image CI

on: [push]

jobs:   

  build:
    name: Build
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v1
    - name: Set docker env variable
      run: echo ::set-env name=image_name::mmornati/docker-ghostblog
    - name: Set image version based on tag
      if: startsWith('refs/tags/', github.ref)
      run: echo ::set-env name=image_version::"${github.ref}" | sed 's/ref\/tags\///g'
    - name: Check Env variables
      run: echo "Image Name ${image_name}"
    - name: Checkout Official Images
      run: git clone https://github.com/docker-library/official-images.git official-images
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag "${image_name}"
    - name: Start New Docker
      run: docker run -d --name blogtest -p 2368:2368 -e WEB_URL=http://localhost:2368 -e NODE_ENV=production "${image_name}"
    - name: Wait for container startup
      run: |
        until $(curl --output /dev/null --silent --head --fail http://localhost:2368); do
          echo "waiting for ghostblog container...";
          sleep 10;
        done;
    - name: Test with Official Images
      run: official-images/test/run.sh "${image_name}"
    - name: Test Started Blog
      run: curl http://localhost:2368 | grep "The professional publishing platform"
    - name: Push Latest image
      if: github.ref == 'refs/heads/master'
      run: | 
        echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin &&
        docker push "${image_name}"
    - name: Push Tagged image, if tag
      if: startsWith('refs/tags/', github.ref)
      run: | 
        echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin &&
        docker push "${image_name}":"${image_version}"
      
